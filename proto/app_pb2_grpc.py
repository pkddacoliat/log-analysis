# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import app_pb2 as app__pb2


class LogAnalysisStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AnalyseLog = channel.stream_stream(
        '/loganalysis.LogAnalysis/AnalyseLog',
        request_serializer=app__pb2.AnalyseLogRequest.SerializeToString,
        response_deserializer=app__pb2.AnalyseLogResult.FromString,
        )
    self.StoreAlert = channel.unary_unary(
        '/loganalysis.LogAnalysis/StoreAlert',
        request_serializer=app__pb2.AnalyseLogResult.SerializeToString,
        response_deserializer=app__pb2.StoreAlertResult.FromString,
        )
    self.SendEmail = channel.unary_unary(
        '/loganalysis.LogAnalysis/SendEmail',
        request_serializer=app__pb2.StoreAlertResult.SerializeToString,
        response_deserializer=app__pb2.SendEmailResult.FromString,
        )


class LogAnalysisServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AnalyseLog(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StoreAlert(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendEmail(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LogAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AnalyseLog': grpc.stream_stream_rpc_method_handler(
          servicer.AnalyseLog,
          request_deserializer=app__pb2.AnalyseLogRequest.FromString,
          response_serializer=app__pb2.AnalyseLogResult.SerializeToString,
      ),
      'StoreAlert': grpc.unary_unary_rpc_method_handler(
          servicer.StoreAlert,
          request_deserializer=app__pb2.AnalyseLogResult.FromString,
          response_serializer=app__pb2.StoreAlertResult.SerializeToString,
      ),
      'SendEmail': grpc.unary_unary_rpc_method_handler(
          servicer.SendEmail,
          request_deserializer=app__pb2.StoreAlertResult.FromString,
          response_serializer=app__pb2.SendEmailResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loganalysis.LogAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
